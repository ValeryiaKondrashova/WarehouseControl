


=============== Запуск сервера... (Переход в ServerApplication) ================
------------------------- Многопоточный сервер запущен -------------------------
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Установлено новое соединение! IP:/127.0.0.1:55560
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Успешно! Данные из БД о пользователях просмотрены!
выполнение writeObject(Command.CREATE): запись введенного пользователя в поток... Добавление пользователя в БД
Успешно! Пользователь добавлен в БД (Table: users)!
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Успешно! Данные из БД о пользователях просмотрены!
выполнение writeObject(Command.UPDATE): Редактирование пользователя в БД
Успешно! Данные пользователя отредактированы!
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Успешно! Данные из БД о пользователях просмотрены!
выполнение writeObject(Command.DELETE): Удаление пользователя из БД
Успешно! Пользователь удален!
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Успешно! Данные из БД о пользователях просмотрены!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Установлено новое соединение! IP:/127.0.0.1:56470
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Успешно! Данные из БД о товарах просмотрены!
Установлено новое соединение! IP:/127.0.0.1:56472
Успешно! Товар добавлен в БД (Table: products)!
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Успешно! Данные из БД о товарах просмотрены!



=============== Запуск сервера... (Переход в ServerApplication) ================
------------------------- Многопоточный сервер запущен -------------------------
Нажатие пользователем на кнопку ЗАРЕГИСТРИРОВАТЬСЯ. Переход на окно регистрации --> (Логика окна Регистрации описана в SecondController.java)
Регистрация клиента... Добавление пользователя в БД
Клиент успешно добавлен! DB: warehouse; Table: users :)
Установлено новое соединение! IP:/127.0.0.1:58430
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Успешно! Данные из БД о товарах просмотрены!
Запуск клиента... Открытие окна авторизации



=============== Запуск сервера... (Переход в ServerApplication) ================
------------------------- Многопоточный сервер запущен -------------------------
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Установлено новое соединение! IP:/127.0.0.1:62552
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Успешно! Данные из БД о товарах просмотрены!
Внимание! Введенный аккаунт не найден!
Запуск клиента... Открытие окна авторизации



=============== Запуск сервера... (Переход в ServerApplication) ================
------------------------- Многопоточный сервер запущен -------------------------
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Установлено новое соединение! IP:/127.0.0.1:52384
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Успешно! Данные из БД о пользователях просмотрены!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Внимание! Введенный аккаунт не найден!
Запуск клиента... Открытие окна авторизации
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Внимание! Введенный аккаунт не найден!
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Внимание! Введенный аккаунт не найден!
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ЗАРЕГИСТРИРОВАТЬСЯ. Переход на окно регистрации --> (Логика окна Регистрации описана в SecondController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Внимание! Введенный аккаунт не найден!
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Внимание! Введенный аккаунт не найден!
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.CREATE): запись введенного пользователя в поток... Добавление пользователя в БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Внимание! Введенный аккаунт не найден!
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Внимание! Введенный аккаунт не найден!
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Внимание! Введенный аккаунт не найден!
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Внимание! Введенный аккаунт не найден!
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Запрос в БД для получения логина, пароля и СТАТУСА клиента...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ЗАРЕГИСТРИРОВАТЬСЯ. Переход на окно регистрации --> (Логика окна Регистрации описана в SecondController.java)
Регистрация клиента... Добавление пользователя в БД
Клиент успешно добавлен! DB: warehouse; Table: users :)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.DELETE): Удаление пользователя из БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.CREATE): запись введенного пользователя в поток... Добавление пользователя в БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.UPDATE): Редактирование пользователя в БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.DELETE): Удаление пользователя из БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.CREATE): запись введенного пользователя в поток... Добавление пользователя в БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.DELETE): Удаление пользователя из БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.DELETE): Удаление пользователя из БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.DELETE): Удаление пользователя из БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.DELETE): Удаление пользователя из БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.UPDATE): Редактирование пользователя в БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ЗАРЕГИСТРИРОВАТЬСЯ. Переход на окно регистрации --> (Логика окна Регистрации описана в SecondController.java)
Регистрация клиента... Добавление пользователя в БД
Клиент успешно добавлен! DB: warehouse; Table: users :)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Специалисту по перевозке грузов! Переход на окно для специалиста -->(Логика окна специалиста по перевозке грузов описана в LoaderController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Запуск клиента... Открытие окна авторизации
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.DELETE): Удаление пользователя из БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.UPDATE): Редактирование пользователя в БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
